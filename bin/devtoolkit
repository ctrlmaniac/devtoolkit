#!/usr/bin/env bash
# devtoolkit - Main CLI entrypoint
#
# USAGE:
#   devtoolkit <command> [subcommand] [args...]

set -euo pipefail

# Resolve paths
_DEVTOOLKIT_BIN_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=../devtoolkit/env.sh
source "$_DEVTOOLKIT_BIN_DIR/../devtoolkit/env.sh"

# Load I/O helpers
# shellcheck disable=SC1090
source "$UTIL_IO"

COMMAND="${1:-}"
SUBCOMMAND="${2:-}"

# Show help if no command or --help/-h is passed
if [[ -z "$COMMAND" || "$COMMAND" == "--help" || "$COMMAND" == "-h" ]]; then
  source "$DEVTOOLKIT/libs/help/_main.sh"
  print_main_help
  exit 0
fi

# Handle `devtoolkit help <command>`
if [[ "$COMMAND" == "help" ]]; then
  shift || true
  source "$DEVTOOLKIT/libs/help/_dispatch.sh"
  help_dispatch "$@"
  exit $?
fi

shift || true # shift COMMAND

# If command is a standalone script: devtoolkit/foo.sh
if [[ -f "$DEVTOOLKIT/commands/${COMMAND}.sh" ]]; then
  exec bash "$DEVTOOLKIT/commands/${COMMAND}.sh" "$@"

# If command is a folder and subcommand exists: devtoolkit/foo/bar.sh
elif [[ -n "${SUBCOMMAND:-}" && -f "$DEVTOOLKIT/commands/${COMMAND}/${SUBCOMMAND}.sh" ]]; then
  shift || true # shift SUBCOMMAND
  exec bash "$DEVTOOLKIT/commands/${COMMAND}/${SUBCOMMAND}.sh" "$@"

# Unknown command
else
  log_error "Unknown command: $COMMAND"
  log_info "Use 'devtoolkit --help' to see available commands."
  exit 1
fi
